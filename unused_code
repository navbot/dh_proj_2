```{r import_Hemingway_bulk}
#DO NOT RUN
file_list <- list.files(path = ".", recursive = FALSE, pattern = "*Ernest.txt$", full.names = FALSE)

Hemingway_files <- vroom(file_list, delim = ".", col_names = FALSE)
```

```{r hemingway_corpus}
#DO NOT RUN
DATA_DIR <- "."
hemingway_corpus <- readtext("A Farewell to Arms_Hemingway, Ernest.txt", docvarsfrom = "filenames", docvarnames = c("title", "author"), devsep = "_")
```
## Sentiment Analysis

```{r all_author_sentences}
all_authors_sentence <- all_authors %>%
  group_by(author, title, text) %>%
  summarise (text = paste(text, collapse = "")) %>%
  unnest_regex(sentences, text, pattern = "[.?!]", to_lower = TRUE)  
```

```{r author_sentence_nr}
author_sentence_nr <- all_authors_sentence %>%
  ungroup() %>%
  mutate(sentence_number = row_number()) %>%
  group_by(author, title, sentence_number) %>%
  unnest_tokens(word, sentences) %>%
  anti_join(stop_words)
```

```{r author_concept}
author_concept <-  author_sentence_nr #%>%
  #left_join(emotion_words) 
```

```{r author_concept_sentiment}
author_concept_sentiment <- author_concept %>%
  inner_join(get_sentiments("bing"))
```

```{r author_sentiment_total}
author_sentiment_total <- author_concept_sentiment %>%
  count(sentence_number, sentiment) %>%
  pivot_wider(names_from = sentiment,
              values_from = n,
              values_fill = 0)  %>%
  mutate(sentiment = positive - negative) #%>%
  #left_join(author_concept) #%>%
  #filter(emotion == TRUE)
```

```{r author_sentiment_table}
author_sentiment_table <- author_sentiment_total %>%
  #pivot_longer(sentiment,
               #names_to = "word",
               #values_to = "total_sentiment")  %>%
  #drop_na() %>%
  group_by(title, author) %>%
  summarise (total = sum(sentiment)) %>%
  ungroup()
```

```{r author_sentiment_plot}
author_sentiment_table %>%
  ggplot(aes(title, y = total, fill = title)) +
  geom_col(color = "black",
           alpha = .7,
           position = "identity") +
  #facet_wrap(~ concept) +
  labs(title = "Positive and Negative Sentiment by Concept",
       x = "Overal Sentiment",
       y = "Author",
       fill = "Title") +
  coord_flip() 
```
```{r new_sentiment_analysis}
#temp <- hemingway_corpus %>% unnest_regex(sentences, text, pattern = "[.?!]", to_lower = TRUE)
my_text <- read_file("~/Digital.Humanities/dh_proj_2/The Garden of Eden_Hemingway_clean.txt")
my_text <- get_sentences(my_text)
new_text <- c(my_text)
total_sentiment <- sentiment(my_text)
total <- sum(total_sentiment$sentiment)
```
```{r filtering_protagonists}
tggp <- the_great_gatsby_protagonist %>% filter(title == "The Great Gatsby") %>% summarise(across(anger:trust, sum))

data_for_gatsby <- entities_matches_sentiment[str_detect(entities_matches_sentiment$words, c("Gats", "Jay")), ] %>% filter(title == "The Great Gatsby") %>%
  group_by(title, words, kind) %>%
  summarise(across(anger:sentiment, sum)) %>% select(-positive, -negative, -sentiment, -kind)

new_gatsby <- data_for_gatsby[c(1:3),c(3:10)] %>%  summarise(across(anger:trust, sum)) %>% mutate(protagonist = "Gatsby", .before  = anger)
new_gatsby_sum <- bind_rows(data_for_gatsby, new_gatsby)

data_for_diver <- entities_matches_sentiment[str_detect(entities_matches_sentiment$words, "Dick"), ] %>% filter(title == "Tender is the Night") %>%
  group_by(title, words, kind) %>%
  summarise(across(anger:sentiment, sum)) %>% select(-positive, -negative, -sentiment, -kind)
  
data_for_gatsby <- entities_matches_sentiment[str_detect(entities_matches_sentiment$words, "Gats"), ] %>% filter(title == "The Great Gatsby") %>%
  group_by(title, words, kind) %>%
  summarise(across(anger:sentiment, sum)) %>% select(-positive, -negative, -sentiment, -kind)

data_for_daisy <- entities_matches_sentiment[str_detect(entities_matches_sentiment$words, "Dais"), ] %>% filter(title == "The Great Gatsby") %>%
  group_by(title, words, kind) %>%
  summarise(across(anger:sentiment, sum)) %>% select(-positive, -negative, -sentiment, -kind)

data_for_gatsby_2 <- entities_matches_sentiment[str_detect(entities_matches_sentiment$words, "Jay"), ] %>% filter(title == "The Great Gatsby") %>%
  group_by(title, words, kind) %>%
  summarise(across(anger:sentiment, sum)) %>% select(-positive, -negative, -sentiment, -kind)
  
temp_table1 <-bind_rows(data_for_gatsby, data_for_gatsby_2) %>% ungroup() %>% select(-title, -words)
temp_table2 <- data_for_diver %>% ungroup() %>% select(-title, -words)
temp_table3 <- data_for_anthony %>% ungroup() %>% select(-title, -words)
temp_table4 <- data_for_amory %>% ungroup() %>% select(-title, -words)
temp_table5 <- data_for_daisy %>% ungroup() %>% select(-title, -words)
temp_table6 <- data_for_henry %>% ungroup() %>% select(-title, -words)
#sum_anger <- data_for_gatsby %>% sum(anger)
data_for_gatsby_final <- mapply(sum, temp_table1)
data_for_diver_final <- mapply(sum, temp_table2)
data_for_anthony_final <- mapply(sum, temp_table3)
data_for_amory_final <- mapply(sum, temp_table4)
data_for_daisy_final <- mapply(sum, temp_table5)
data_for_henry_final <- mapply(sum, temp_table6)

protag_fitz <- read_csv("protag_f.csv") %>% mutate(total = rowSums(across(where(is.numeric)))) %>% mutate(across(anger:trust, .fns = ~ round((. / total) * 100)))
Gatsby_scale <- protag_fitz %>% filter(protagonist == "Gatsby")

radar_facet_sentiment_2 <- bind_rows(tender_is_the_night_protagonist, the_great_gatsby_protagonist)

```